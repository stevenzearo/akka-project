akka {
  actor {
    serialize-messages = on
    serialize-creators = on
    allow-java-serialization = on
    provider = remote
    serializers {
      mySerializer = "app.receiver.api.MessageSerializer"
    }
    serialization-bindings {
      "akka.serialization.JavaSerializer" = mySerializer
      "app.receiver.api.OpenMessage" = mySerializer
      "app.receiver.api.CloseMessage" = mySerializer
      "app.receiver.api.ConnectionMessage" = mySerializer
    }
    deployment {
      /receiver {
        router = round-robin-group
        routees.paths = [
        "akka://message-receiver@127.0.0.1:25520/user/receiver"
        ]
      }
    }
  }
  remote {
    artery {
      enabled = on
      transport = tcp
      canonical {
        port = 25521 # akka system connection port
        hostname = "127.0.0.1"
      }
    }
  }
  persistence {
    journal {
      plugin = "akka-contrib-mongodb-persistence-journal"
      auto-start-journals = ["akka-contrib-mongodb-persistence-journal"]
    }
    snapshot-store {
      plugin = "akka-contrib-mongodb-persistence-snapshot"
      auto-start-snapshot-stores = ["akka-contrib-mongodb-persistence-snapshot"]
  }
    contrib {
      persistence {
        mongodb {
          mongo {
            mongouri = "mongodb://127.0.0.1:30017/replicated-database"
            database = "storage-db"
            journal-collection = "message_sender_persistence_journal"
            journal-index = "message_sender_journal_index"
            snaps-collection = "message_sender_persistent_snapshots"
            snaps-index = "message_sender_snaps_index"
            journal-write-concern = "Acknowledged"
          }
        }
      }
    }
  }
}